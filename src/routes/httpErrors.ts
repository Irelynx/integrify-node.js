/* istanbul ignore file */
// also see jest.config.js (coveragePathIgnorePatterns)
import http from 'http';

export class HTTPError extends Error {
    public statusCode: number = 500;
    get message() {
        return http.STATUS_CODES[this.statusCode] as string;
    }
}

// autogenerated:
/*
var out = '';
for (const key of Object.keys(http.STATUS_CODES)) {
	out += `export class ${http.STATUS_CODES[key].split(/\s\-\'/).join('')} extends HTTPError {\n    statusCode = ${key};\n}\n\n`
}
console.log(out)
*/

export class Continue extends HTTPError {
    statusCode = 100;
}

export class SwitchingProtocols extends HTTPError {
    statusCode = 101;
}

export class Processing extends HTTPError {
    statusCode = 102;
}

export class EarlyHints extends HTTPError {
    statusCode = 103;
}

export class OK extends HTTPError {
    statusCode = 200;
}

export class Created extends HTTPError {
    statusCode = 201;
}

export class Accepted extends HTTPError {
    statusCode = 202;
}

export class NonAuthoritativeInformation extends HTTPError {
    statusCode = 203;
}

export class NoContent extends HTTPError {
    statusCode = 204;
}

export class ResetContent extends HTTPError {
    statusCode = 205;
}

export class PartialContent extends HTTPError {
    statusCode = 206;
}

export class MultiStatus extends HTTPError {
    statusCode = 207;
}

export class AlreadyReported extends HTTPError {
    statusCode = 208;
}

export class IMUsed extends HTTPError {
    statusCode = 226;
}

export class MultipleChoices extends HTTPError {
    statusCode = 300;
}

export class MovedPermanently extends HTTPError {
    statusCode = 301;
}

export class Found extends HTTPError {
    statusCode = 302;
}

export class SeeOther extends HTTPError {
    statusCode = 303;
}

export class NotModified extends HTTPError {
    statusCode = 304;
}

export class UseProxy extends HTTPError {
    statusCode = 305;
}

export class TemporaryRedirect extends HTTPError {
    statusCode = 307;
}

export class PermanentRedirect extends HTTPError {
    statusCode = 308;
}

export class BadRequest extends HTTPError {
    statusCode = 400;
}

export class Unauthorized extends HTTPError {
    statusCode = 401;
}

export class PaymentRequired extends HTTPError {
    statusCode = 402;
}

export class Forbidden extends HTTPError {
    statusCode = 403;
}

export class NotFound extends HTTPError {
    statusCode = 404;
}

export class MethodNotAllowed extends HTTPError {
    statusCode = 405;
}

export class NotAcceptable extends HTTPError {
    statusCode = 406;
}

export class ProxyAuthenticationRequired extends HTTPError {
    statusCode = 407;
}

export class RequestTimeout extends HTTPError {
    statusCode = 408;
}

export class Conflict extends HTTPError {
    statusCode = 409;
}

export class Gone extends HTTPError {
    statusCode = 410;
}

export class LengthRequired extends HTTPError {
    statusCode = 411;
}

export class PreconditionFailed extends HTTPError {
    statusCode = 412;
}

export class PayloadTooLarge extends HTTPError {
    statusCode = 413;
}

export class URITooLong extends HTTPError {
    statusCode = 414;
}

export class UnsupportedMediaType extends HTTPError {
    statusCode = 415;
}

export class RangeNotSatisfiable extends HTTPError {
    statusCode = 416;
}

export class ExpectationFailed extends HTTPError {
    statusCode = 417;
}

export class ImaTeapot extends HTTPError {
    statusCode = 418;
}

export class MisdirectedRequest extends HTTPError {
    statusCode = 421;
}

export class UnprocessableEntity extends HTTPError {
    statusCode = 422;
}

export class Locked extends HTTPError {
    statusCode = 423;
}

export class FailedDependency extends HTTPError {
    statusCode = 424;
}

export class TooEarly extends HTTPError {
    statusCode = 425;
}

export class UpgradeRequired extends HTTPError {
    statusCode = 426;
}

export class PreconditionRequired extends HTTPError {
    statusCode = 428;
}

export class TooManyRequests extends HTTPError {
    statusCode = 429;
}

export class RequestHeaderFieldsTooLarge extends HTTPError {
    statusCode = 431;
}

export class UnavailableForLegalReasons extends HTTPError {
    statusCode = 451;
}

export class InternalServerError extends HTTPError {
    statusCode = 500;
}

export class NotImplemented extends HTTPError {
    statusCode = 501;
}

export class BadGateway extends HTTPError {
    statusCode = 502;
}

export class ServiceUnavailable extends HTTPError {
    statusCode = 503;
}

export class GatewayTimeout extends HTTPError {
    statusCode = 504;
}

export class HTTPVersionNotSupported extends HTTPError {
    statusCode = 505;
}

export class VariantAlsoNegotiates extends HTTPError {
    statusCode = 506;
}

export class InsufficientStorage extends HTTPError {
    statusCode = 507;
}

export class LoopDetected extends HTTPError {
    statusCode = 508;
}

export class BandwidthLimitExceeded extends HTTPError {
    statusCode = 509;
}

export class NotExtended extends HTTPError {
    statusCode = 510;
}

export class NetworkAuthenticationRequired extends HTTPError {
    statusCode = 511;
}